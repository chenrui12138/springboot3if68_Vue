{"remainingRequest":"D:\\前端\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\前端\\admin\\admin\\src\\components\\common\\BreadCrumbs.vue?vue&type=style&index=0&id=b290fa88&lang=scss&scoped=true&","dependencies":[{"path":"D:\\前端\\admin\\admin\\src\\components\\common\\BreadCrumbs.vue","mtime":1649170224957},{"path":"D:\\前端\\admin\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\前端\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\前端\\admin\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\前端\\admin\\admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\前端\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\前端\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYXBwLWJyZWFkY3J1bWIgew0KICBkaXNwbGF5OiBibG9jazsNCiAgZm9udC1zaXplOiAxNHB4Ow0KICBsaW5lLWhlaWdodDogNTBweDsNCg0KICAuYm94IHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgfQ0KDQogIC5uby1yZWRpcmVjdCB7DQogICAgY29sb3I6ICM5N2E4YmU7DQogICAgY3Vyc29yOiB0ZXh0Ow0KICB9DQp9DQo="},{"version":3,"sources":["BreadCrumbs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BreadCrumbs.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n  <el-breadcrumb\r\n    class=\"app-breadcrumb\"\r\n    separator=\"/\"\r\n    style=\"\r\n      height: 40px;\r\n      backgroundcolor: rgba(48, 208, 182, 1);\r\n      borderradius: 4px;\r\n      padding: 0px 20px 0px 20px;\r\n      boxshadow: 0px 6px 6px #00de91;\r\n      borderwidth: 0;\r\n      borderstyle: dotted solid double dashed;\r\n      bordercolor: #ff0000;\r\n    \"\r\n  >\r\n    <transition-group\r\n      name=\"breadcrumb\"\r\n      class=\"box\"\r\n      :style=\"\r\n        1 == 1\r\n          ? 'justifyContent:flex-start;'\r\n          : 1 == 2\r\n          ? 'justifyContent:center;'\r\n          : 'justifyContent:flex-end;'\r\n      \"\r\n    >\r\n      <el-breadcrumb-item v-for=\"(item, index) in levelList\" :key=\"item.path\">\r\n        <span\r\n          v-if=\"item.redirect === 'noRedirect' || index == levelList.length - 1\"\r\n          class=\"no-redirect\"\r\n          >{{ item.name }}</span\r\n        >\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.name }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nimport pathToRegexp from \"path-to-regexp\";\r\nimport { generateTitle } from \"@/utils/i18n\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      levelList: null,\r\n    };\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.getBreadcrumb();\r\n    },\r\n  },\r\n  created() {\r\n    this.getBreadcrumb();\r\n    this.breadcrumbStyleChange();\r\n  },\r\n  methods: {\r\n    generateTitle,\r\n    getBreadcrumb() {\r\n      // only show routes with meta.title\r\n      let route = this.$route;\r\n      let matched = route.matched.filter((item) => item.meta);\r\n      const first = matched[0];\r\n      matched = [{ path: \"/index\" }].concat(matched);\r\n\r\n      this.levelList = matched.filter((item) => item.meta);\r\n    },\r\n    isDashboard(route) {\r\n      const name = route && route.name;\r\n      if (!name) {\r\n        return false;\r\n      }\r\n      return name.trim().toLocaleLowerCase() === \"Index\".toLocaleLowerCase();\r\n    },\r\n    pathCompile(path) {\r\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\r\n      const { params } = this.$route;\r\n      var toPath = pathToRegexp.compile(path);\r\n      return toPath(params);\r\n    },\r\n    handleLink(item) {\r\n      const { redirect, path } = item;\r\n      if (redirect) {\r\n        this.$router.push(redirect);\r\n        return;\r\n      }\r\n      this.$router.push(path);\r\n    },\r\n    breadcrumbStyleChange(val) {\r\n      this.$nextTick(() => {\r\n        document\r\n          .querySelectorAll(\".app-breadcrumb .el-breadcrumb__separator\")\r\n          .forEach((el) => {\r\n            el.innerText = \"/\";\r\n            el.style.color = \"rgba(255, 255, 255, 1)\";\r\n          });\r\n        document\r\n          .querySelectorAll(\".app-breadcrumb .el-breadcrumb__inner a\")\r\n          .forEach((el) => {\r\n            el.style.color = \"rgba(255, 255, 255, 1)\";\r\n          });\r\n        document\r\n          .querySelectorAll(\r\n            \".app-breadcrumb .el-breadcrumb__inner .no-redirect\"\r\n          )\r\n          .forEach((el) => {\r\n            el.style.color = \"rgba(255, 255, 255, 1)\";\r\n          });\r\n\r\n        let str = \"2\";\r\n        if (2 == str) {\r\n          let headHeight = \"60px\";\r\n          headHeight = parseInt(headHeight) + 10 + \"px\";\r\n          document.querySelectorAll(\".app-breadcrumb\").forEach((el) => {\r\n            el.style.marginTop = headHeight;\r\n          });\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-breadcrumb {\r\n  display: block;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n\r\n  .box {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n\r\n  .no-redirect {\r\n    color: #97a8be;\r\n    cursor: text;\r\n  }\r\n}\r\n</style>\r\n"]}]}